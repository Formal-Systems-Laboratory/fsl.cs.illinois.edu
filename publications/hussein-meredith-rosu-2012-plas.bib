@inproceedings{hussein-meredith-rosu-2012-plas,
  author    = {Hussein, Soha and Meredith, Patrick and Ro\c{s}lu, Grigore},
  title     = {Security-Policy Monitoring and Enforcement with JavaMOP},
  abstract  = {
Software security attacks represent an ever growing problem. One way to make software more secure is to use Inlined Reference Monitors (IRMs), which allow security specifications to be inlined inside a target program to ensure its compliance with the desired security specifications. The IRM approach has been developed primarily by the security community. Runtime Verification (RV), on the other hand, is a software engineering approach, which is intended to formally encode system specifications within a target program such that those specifications can be later enforced during the execution of the program. Until now, the IRM and RV approaches have lived separate lives; in particular RV techniques have not been applied to the security domain, being used instead to aid program correctness and testing. This paper discusses the usage of a formalism-generic RV system, JavaMOP, as a means to specify IRMs, leveraging the careful engineering of the JavaMOP system for ensuring secure operation of software in an efficient manner. 
},
  booktitle = {Proceedings of the 7th Workshop on Programming Languages and Analysis for Security (PLAS'12)},
  pages     = {3:1-3:11},
  month     = {June},
  year      = {2012},
  publisher = {ACM},
  author_id      = {Soha Hussein and Patrick Meredith and Grigore Rosu},
  category       = {fsl,runtime_verification},
  project_url    = {http://fsl.cs.illinois.edu/mop},
  project_name   = {MOP},
  booktitle_acronym = {PLAS'12},
  booktitle_url     = {http://www.doc.ic.ac.uk/PLAS2012/},
  doi               = {http://doi.acm.org/10.1145/2336717.2336720},
} 
 

