@inproceedings{rosu-chen-2003-ase,
  author    = {Grigore Ro\c{s}u and Feng Chen},
  title     = {Certifying Measurement Unit Safety Policy},
  abstract  = {
Measurement unit safety policy checking is a topic in software analysis concerned with ensuring that programs do not violate basic principles of units of measurement. Such violations can hide significant domain-specific errors which are hard or impossible to find otherwise. Measurement unit analysis by means of automatic deduction is addressed in this paper. We draw general design principles for measurement unit certification tools and discuss our prototype for the C language, which includes both dynamic and static checkers. Our approach is based on assume/assert annotations of code, which are properly interpreted by our deduction-based tools and ignored by standard compilers. We do not modify the language in order to support units. The approach can be extended to incorporate other safety policies without great efforts. 
  },
  booktitle = {Proceedings of the 18th IEEE International Conference on 
             Automated Software Engineering (ASE'03)},
  pages     = {304-309},
  month     = {October},
  year      = {2003},
  publisher = {IEEE},
  author_id         = {Grigore Rosu and Feng Chen},
  category          = {fsl},
  project_url       = {http://fsl.cs.illinois.edu/mop},
  project_name      = {MOP},
  booktitle_acronym = {ASE'03},
  booktitle_url     = {http://ase-conferences.org/ase/past/ase2003/index.htm},
  doi               = {http://doi.ieeecomputersociety.org/10.1109/ASE.2003.10002},
}
