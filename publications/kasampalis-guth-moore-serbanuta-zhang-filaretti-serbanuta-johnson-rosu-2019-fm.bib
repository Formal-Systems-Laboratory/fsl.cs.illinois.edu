@inproceedings{kasampalis-guth-moore-serbanuta-zhang-filaretti-serbanuta-johnson-rosu-2019-fm,
    author = {Kasampalis, Theodoros and Guth, Dwight and Moore, Brandon and Serbanuta, Traian Florin and Zhang, Yi and Filaretti, Daniele and Serbanuta, Virgil and Johnson, Ralph and Rosu, Grigore},
    title = {IELE: A Rigorously Designed Language and Tool Ecosystem for the Blockchain},
    abstract = {
This paper proposes IELE, an LLVM-style language, together with a tool ecosystem for implementing and formally reasoning about smart contracts on the blockchain. IELE was designed by specifying its semantics formally in the K framework. Its implementation, a
IELE virtual machine (VM), as well as a formal verification tool for IELE
smart contracts, were automatically generated from the formal specification. The automatically generated formal verification tool allows us
to formally verify smart contracts without any gap between the verifier
and the actual VM. A compiler from Solidity, the predominant high-
level language for smart contracts, to IELE has also been (manually)
implemented, so Ethereum contracts can now also be executed on IELE.
},
    booktitle = {Proceedings of the 23 International Symposium on Formal Methods (FM'19)},
    booktitle_acronym = {FM 2019},
    year = {2019},
    month = {October},
    pages = {593-610},
    author_id = {Kasampalis, Theodoros and Guth, Dwight and Moore, Brandon and Serbanuta, Traian Florin and Zhang, Yi and Filaretti, Daniele and Serbanuta, Virgil and Johnson, Ralph and Rosu, Grigore},
    category = {fsl},
    doi = {https://doi.org/10.1007/978-3-030-30942-8_35},
}
