@phdthesis{ellison-2012-thesis,
  author    = {Chucky Ellison},
  title     = {A Formal Semantics of {C} with Applications},
  abstract  = {
This dissertation shows that complex, real programming languages can be completely formalized in the K Framework, yielding interpreters and analysis tools for testing and bug detection. This is demonstrated by providing, in K, the first complete formal semantics of the C programming language. With varying degrees of effort, tools such as interpreters, debuggers, and model-checkers, together with tools that check for memory safety, races, deadlocks, and undefined behavior are then generated from the semantics. Being executable, the semantics has been thoroughly tested against the GCC torture test suite and successfully passes 99.2\% of 776 test programs. The semantics is also evaluated against popular analysis tools, using a new test suite in addition to a third-party test suite. The semantics-based tool performs at least as well or better than the other tools tested.
  },
  school    = {University of Illinois},
  year      = {2012},
  month     = {July},
  author_id    = {Chucky Ellison},
  category     = {fsl,semantics},
  project_url  = {http://fsl.cs.illinois.edu/k},
  project_name = {K},
  doi          = {http://hdl.handle.net/2142/34297},
}
