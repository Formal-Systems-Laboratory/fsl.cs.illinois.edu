@inproceedings{rosu-2013-synasc,
  author    = {Grigore Rosu},
  title     = {Specifying Languages and Verifying Programs with K},
  abstract  = {
K is a rewrite-based executable semantic framework for defining
languages.
The K framework is designed to allow implementing a variety of generic tools
that can be used with any language defined in K, such as parsers, interpreters,
symbolic execution engines, semantic debuggers, test-case generators,
state-space explorers, model checkers, and even deductive program verifiers.
The latter are based on matching logic for expressing static properties,
and on reachability logic for expressing dynamic properties.
Several large languages have been already defined or are being defined in K,
including C, Java, Python, Javascript, and LLVM.
  },
  booktitle  = {Proceedings of 15th International Symposium on Symbolic and Numeric Algorithms
for Scientific Computing (SYNASC'13)},
  series  = {IEEE/CPS},
  publisher  = {IEEE},
  year  = {2013},
  month = {September},
  note = {{Invited talk.}},
  pages = {28-31},
  doi = {http://dx.doi.org/10.1109/SYNASC.2013.81},

  author_id         = {Grigore Rosu},
  category  = {fsl, logics, executable_semantics, programming_languages, semantics, K, rewrite_logic},
  project_url     = {http://kframework.org},
  project_name    = {K},
  booktitle_acronym = {SYNASC'13},
  booktitle_url     = {http://synasc.ro/synasc2013/},
  presentation={2013-09-24-SYNASC},
}
