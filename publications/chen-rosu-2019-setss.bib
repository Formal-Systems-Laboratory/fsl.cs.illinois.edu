@inproceedings{chen-rosu-2019-setss,
  author    = {Xiaohong Chen and Grigore Rosu},
  title     = {{SETSS}'19 Lecture Notes on {K}},
  abstract  = {We give an overview on the applications and foundations of the K language framework, a semantic framework for programming languages and formal analysis tools. K represents a 20-year effort in pursuing the ideal language framework vision, where programming languages must have formal definitions, and tools for a given language, such as parsers, interpreters, compilers, semantic-based debuggers, state-space explorers, model checkers, deductive program verifiers, etc., can be derived from just one reference formal definition of the language, which is executable, and no other semantics for the same language should be needed. The correctness of the languages tools is guaranteed on a case-by-case basis by proof objects, which encode rigorous mathematical proofs as certificates for every individual tasks that the tools do and can be mechanically checked by third-party proof checkers.},
  booktitle = {Engineering Trustworthy Software Systems},
  year      = {2019},
  editor    = {Jonathan Bowen and Zhiming Liu},
  series    = {Lecture Notes in Computer Science},
  publisher = {Springer},
  author_id         = {Xiaohong Chen and Grigore Rosu},
  category          = {fsl, executable_semantics, k, logics, matching_logic,
                       program_verification, programming_languages},
  project_url       = {http://kframework.org},
  project_name      = {K},
  booktitle_acronym = {SETSS'19},
  presentation      = {2019-04-21_22-SETSS},
}
